<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.awsec2.persistence.ProductMapper">
	<!-- Configuration O-R Mapping here -->
	<resultMap type="Product" id="product_orm">
		<id property="id" column="id" />
		<result property="name" column="Name" />
		<result property="barcode" column="Barcode" />
		<result property="price_buy" column="Price_buy" />
		<result property="price_sell" column="Price_sell" />
		<result property="unit" column="Unit" />
		<result property="active" column="Active" />
		<result property="organization_id" column="Organization_Id" />
	</resultMap>

	<!-- Define some code segments that can be reused -->
	<sql id="sql_Pars">
		name, barcode, price_buy, price_sell, unit, active,
		organization_id
	</sql>

	<!-- Define Select operation here -->

	<select id="getProductsByOrgId" parameterType="INTEGER"
		resultType="Product">
		SELECT
		Product.id,
		Product.name,
		Product.barcode,
		Product.price_buy,
		Product.price_sell,
		Product.unit,
		Product.active,
		Product.organization_id
		FROM Product
		WHERE
		Product.organization_id =#{Id}
	</select>

	<select id="getProductsByProdId" parameterType="INTEGER"
		resultType="Product">
		SELECT
		Product.id,
		Product.name,
		Product.barcode,
		Product.price_buy,
		Product.price_sell,
		Product.unit,
		Product.active,
		Product.organization_id
		FROM Product
		WHERE Product.id = #{id}
	</select>
	<select id="getProdIdsByOrgId" parameterType="INTEGER"
		resultType="Hashmap">
		SELECT
		Product.id
		FROM Product
		WHERE Product.organization_id = #{organization_id}
	</select>

	<select id="searchProducts" parameterType="Product" resultType="Product">
		SELECT
		Product.id,
		Product.name,
		Product.barcode,
		Product.price_buy,
		Product.price_sell,
		Product.unit,
		Product.active,
		Product.organization_id
		FROM Product
		WHERE organization_id =
		#{organization_id}
		<if test="name != null">
			AND name like CONCAT('%','${name}','%' )
		</if>
		<if test="barcode != null">
			AND barcode like CONCAT('%','${barcode}','%' )
		</if>
	</select>

	<!-- Define Insert operation here -->

	<insert id="insertProduct" parameterType="Product">
		INSERT INTO Product
		(
		<include refid="sql_Pars" />
		)
		VALUES
		(#{name}, #{barcode}, #{price_buy}, #{price_sell}, #{unit},
		#{active}, 1)
	</insert>
	<insert id="insertProducts" parameterType="ArrayList">
		INSERT INTO Product
		(
		<include refid="sql_Pars" />
		)
		VALUES
		<foreach collection="list" item="Product" index="index"
			separator=",">
			(#{Product.name},#{Product.barcode},#{Product.price_buy},#{Product.price_sell},#{Product.unit},#{Product.active},
			#{Product.organization_id})
		</foreach>
	</insert>


	<!-- Define Update operation here -->

	<update id="updateProd" parameterType="Product">
		UPDATE Product SET
		name =
		#{name},
		barcode = #{barcode},
		price_buy = #{price_buy},
		price_sell =
		#{price_sell},
		unit = #{unit},
		active = #{active}
		WHERE id = #{id}
	</update>


	<!-- Define Delete operation here -->
	<delete id="delProdById" parameterType="INTEGER">
		delete from Product where
		id=#{Id}
	</delete>

</mapper>