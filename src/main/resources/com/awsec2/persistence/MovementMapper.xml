<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.awsec2.persistence.MovementMapper">
	<!-- Configuration O-R Mapping here -->
	<resultMap type="Movement" id="movement_orm">
		<id property="id" column="id" />
		<result property="name" column="Name" />
		<result property="prodName" column="ProdName" />
		<result property="oper_date" column="Oper_Date" />
		<result property="type" column="Type" />
		<result property="amount" column="Amount" />
		<result property="businessUnit_Id" column="BusinessUnit_Id" />
		<result property="product_Id" column="Product_Id" />
	</resultMap>

	<!-- Define some code segments that can be reused -->
	<sql id="sql_Pars">
		name, oper_date, type, amount,
		businessUnit_Id, product_id
	</sql>

	<!-- Define Select operation here -->
	<select id="findMovementsByMovement" resultType="Movement"
		parameterType="Movement">
		SELECT *
		FROM Movement
		<where>
			<if test="name!=null and name!=''"> name=#{name}</if>
			<if test="barcode!=null and barcode!=''"> and barcode=#{barcode}
			</if>
		</where>
	</select>
	<!-- -->
	<select id="getMovementsByOrgId" parameterType="INTEGER"
		resultType="Movement">
		SELECT
		Movement.id,
		Movement.name,
		Product.name as ProdName,
		Movement.oper_date,
		Movement.type,
		Movement.amount,
		Movement.businessUnit_Id,
		Movement.product_id
		FROM Movement, BusinessUnit, Product
		Where
		Movement.businessUnit_Id = BusinessUnit.id
		and
		Movement.product_id = Product.id
		and
		BusinessUnit.organization_id = #{orgId}
		ORDER BY Movement.oper_date DESC
		<!-- WHERE Product.organization_id = Organization.Id AND User.organization_id 
			= Organization.Id AND User.Id =#{Id} Order by Product.id -->
	</select>

	<select id="getMovementsByMovmId" parameterType="INTEGER"
		resultType="Movement">
		SELECT
		Movement.id,
		Movement.name,
		Movement.oper_date,
		Movement.type,
		Movement.amount,
		Movement.businessUnit_Id,
		Movement.product_id
		FROM Movement
		WHERE Movement.id = #{id}
	</select>

	<select id="searchMovements" parameterType="map" resultType="Movement">
		SELECT
		Movement.id,
		Movement.name,
		Product.name as ProdName,
		Movement.oper_date,
		Movement.type,
		Movement.amount,
		Movement.businessUnit_Id,
		Movement.product_id
		FROM Movement, Product
		WHERE Movement.product_id =
		Product.id
		<if test="objMovm.oper_date != null">
			AND oper_date = #{objMovm.oper_date}
		</if>
		<if test="buIds != null">
			AND Movement.businessUnit_Id in
			<foreach item="item" index="index" collection="buIds" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>

	<!-- Define Insert operation here -->

	<insert id="insertMovement" parameterType="Movement">
		INSERT INTO Movement
		(
		<include refid="sql_Pars" />
		)
		VALUES
		(#{name},#{oper_date}, #{type}, #{amount},#{businessUnit_Id},#{product_Id})
	</insert>
	<insert id="insertMovements" parameterType="ArrayList">
		INSERT INTO Movement
		(
		<include refid="sql_Pars" />
		)
		VALUES
		<foreach collection="list" item="Movement" index="index"
			separator=",">
			(#{Movement.name},#{Movement.oper_date},#{Movement.type},
			#{Movement.amount},
			1, 1)
		</foreach>
	</insert>


	<!-- Define Update operation here -->

	<update id="updateMovm" parameterType="Movement">
		UPDATE Movement SET
		name =
		#{name},
		businessunit_id = #{businessUnit_Id},
		product_id = #{product_Id},
		oper_date = #{oper_date},
		type = #{type},
		amount = #{amount}
		WHERE id = #{id}
	</update>


	<!-- Define Delete operation here -->
	<delete id="delMovmById" parameterType="INTEGER">
		delete from Movement
		where
		id=#{Id}
	</delete>


</mapper>