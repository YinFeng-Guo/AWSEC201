<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.awsec2.persistence.MovementMapper">
	<!-- Configuration O-R Mapping here -->
	<resultMap type="Movement" id="movement_orm">
		<id property="id" column="id" />
		<result property="name" column="Name" />
		<result property="barcode" column="Barcode" />
		<result property="price_buy" column="Price_buy" />
		<result property="price_sell" column="Price_sell" />
		<result property="date" column="Date" />
		<result property="type" column="Type" />
		<result property="amount" column="Amount" />
		<result property="organization_id" column="Organization_Id" />
		<result property="product_id" column="Product_Id" />
	</resultMap>

	<!-- Define some code segments that can be reused -->
	<sql id="sql_Pars">
		name, barcode, price_buy, price_sell, date, type, amount, 
		organization_id, product_id
	</sql>

	<!-- Define Select operation here -->
	<select id="findMovementsByMovement" resultType="Movement"
		parameterType="Movement">
		SELECT *
		FROM Movement
		<where>
			<if test="name!=null and name!=''"> name=#{name}</if>
			<if test="barcode!=null and barcode!=''"> and barcode=#{barcode}
			</if>
		</where>
	</select>
	<!--  -->
	<select id="getMovementsByUserId" parameterType="INTEGER"
		resultType="Movement">
		SELECT
		Movement.id,
		Movement.name,
		Movement.barcode,
		Movement.price_buy,
		Movement.price_sell,
		Movement.date,
		Movement.type,
		Movement.amount,
		Movement.organization_id,
		Movement.product_id
		FROM Movement
<!-- 		WHERE
		Product.organization_id = Organization.Id
		AND User.organization_id =
		Organization.Id
		AND User.Id =#{Id}
		Order by Product.id -->
	</select>

	<select id="getMovementsByMovmId" parameterType="INTEGER"
		resultType="Movement">
		SELECT
		Movement.id,
		Movement.name,
		Movement.barcode,
		Movement.price_buy,
		Movement.price_sell,
		Movement.date,
		Movement.type,
		Movement.amount,
		Movement.organization_id,
		Movement.product_id
		FROM Movement
		WHERE Movement.id = #{id}
	</select>

	<select id="searchMovements" parameterType="Movement" resultType="Movement">
		SELECT
		Movement.id,
		Movement.name,
		Movement.barcode,
		Movement.price_buy,
		Movement.price_sell,
		Movement.date,
		Movement.type,
		Movement.amount,
		Movement.organization_id,
		Movement.product_id
		FROM Movement
		WHERE Movement.organization_id = 1
		<if test="name != null">
			AND name like CONCAT('%','${name}','%' )
		</if>
		<if test="barcode != null">
			AND barcode like CONCAT('%','${barcode}','%' )
		</if>
	</select>

	<!-- Define Insert operation here -->

	<insert id="insertMovement" parameterType="Movement">
		INSERT INTO Movement
		(
		<include refid="sql_Pars" />
		)
		VALUES
		(#{name}, #{barcode}, #{price_buy}, #{price_sell}, #{date}, #{type}, #{amount},
		 1, 1)
	</insert>
	<insert id="insertMovements" parameterType="ArrayList">
		INSERT INTO Product
		(
		<include refid="sql_Pars" />
		)
		VALUES
		<foreach collection="list" item="Movement" index="index"
			separator=",">
			(#{Movement.name},#{Movement.barcode},#{Movement.price_buy},#{Movement.price_sell},#{Movement.date},#{Movement.type}, #{Movement.amount},
			1, 1)
		</foreach>
	</insert>


	<!-- Define Update operation here -->

	<update id="updateMovm" parameterType="Movement">
		UPDATE Product SET
		name = #{name},
		barcode = #{barcode},
		price_buy = #{price_buy},
		price_sell = #{price_sell},
		date = #{date},
		type = #{type}
		amount = #{amount}
		WHERE id = #{id}
	</update>


	<!-- Define Delete operation here -->
	<delete id="delMovmById" parameterType="INTEGER">
		delete from Movement where
		id=#{Id}
	</delete>


</mapper>