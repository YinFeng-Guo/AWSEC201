<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.awsec2.persistence.UserMapper">	
	<resultMap type="User" id="userorm">
		<id property="id" column="Id"/>
		<result property="firstname" column="Firstname" />
		<result property="lastname" column="Lastname" />
		<result property="username" column="Username" />
		<result property="password" column="Password" />
		<result property="supers" column="Super"/>
		<result property="active" column="Active" />
		<result property="organization_id" column="Organization_Id" />
	</resultMap>
	
	<sql id="user_columns">
		Firstname, Lastname, Username, Password, Super, Active, Organization_Id
	</sql>
	
	<select id="listAllUser" resultMap="userorm">
		select * 
		from user
	</select>
	
	<select id="queryUser" parameterType="User" resultMap="userorm">
		select * 
		from user
		where Id = #{id}
	</select>
	
	<select id="searchByUsername" parameterType="User" resultMap="userorm">
		select *
		from user
		where 1=1 
		<if test="username != null">
			and Username like CONCAT('%', #{username}, '%') <!-- like CONCAT('%','$(username)','%')  -->
		</if>
	</select>
	
	<select id="getUserByUsername" parameterType="String" resultMap="userorm">
		select 
			Id, Username, Password, Organization_Id
		from 
			user
		where 
			Username = #{username}
	</select>
	<!-- Insert statement begin -->
	<insert id="addUser" parameterType="User">
		insert into user
		(<include refid="user_columns"/>)
		values
		(#{firstname}, #{lastname}, #{username}, #{password}, #{supers}, #{active}, #{organization_id})
	</insert>
	
	<insert id="addUsers" parameterType="ArrayList">
		insert into user
		(<include refid="user_columns"/>)
		values
		<foreach collection="list" item="User" index="index" separator=",">
			(#{User.firstname}, #{User.lastname}, #{User.username}, #{User.password}, #{User.supers}, #{User.active}, #{User.organization_id})
		</foreach>
	</insert>
		
	<!-- Insert statement end -->
	
	<delete id="delOneUserById" parameterType="java.lang.Long">
		delete from user where Id = #{uid}
	</delete>
	
	
	<update id="updateOneUser" parameterType="User">
		update 
			user
		set Firstname = #{firstname},
			Lastname = #{lastname},
			Username = #{username},
			Password = #{password},
			Super = #{supers},
			Active = #{active},
			Organization_Id = #{organization_id}
		where 
			Id = #{id}
	</update>
</mapper>